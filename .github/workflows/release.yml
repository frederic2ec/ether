name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  release:
    name: Release
    strategy:
      matrix:
        os: [ubuntu-latest]
        go-version: [1.14.x]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v2

      # So GoReleaser can generate the changelog properly
      - name: Unshallowify the repo clone
        run: git fetch --prune --unshallow

      # https://github.community/t5/GitHub-Actions/How-to-get-just-the-tag-name/m-p/32167/highlight/true#M1027
      - name: Print Go version and environment
        id: vars
        run: |
          printf "Using go at: $(which go)\n"
          printf "Go version: $(go version)\n"
          printf "\n\nGo environment:\n\n"
          go env
          printf "\n\nSystem environment:\n\n"
          env
          echo "::set-output name=version_tag::${GITHUB_REF/refs\/tags\//}"
          echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
          echo "::set-output name=go_cache::$(go env GOCACHE)"

          # Parse semver
          TAG=${GITHUB_REF/refs\/tags\//}
          SEMVER_RE='[^0-9]*\([0-9]*\)[.]\([0-9]*\)[.]\([0-9]*\)\([0-9A-Za-z\.-]*\)'
          TAG_MAJOR=`echo ${TAG#v} | sed -e "s#$SEMVER_RE#\1#"`
          TAG_MINOR=`echo ${TAG#v} | sed -e "s#$SEMVER_RE#\2#"`
          TAG_PATCH=`echo ${TAG#v} | sed -e "s#$SEMVER_RE#\3#"`
          TAG_SPECIAL=`echo ${TAG#v} | sed -e "s#$SEMVER_RE#\4#"`
          echo "::set-output name=tag_major::${TAG_MAJOR}"
          echo "::set-output name=tag_minor::${TAG_MINOR}"
          echo "::set-output name=tag_patch::${TAG_PATCH}"
          echo "::set-output name=tag_special::${TAG_SPECIAL}"

      # GoReleaser will take care of publishing those artifacts into the release
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v1
        with:
          version: latest
          args: release --rm-dist
        env:
          HOMBRE_TAP: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ steps.vars.outputs.version_tag }}

      # Only publish on non-special tags (e.g. non-beta)
      - name: Publish .deb to Gemfury
        if: ${{ steps.vars.outputs.tag_special == '' }}
        env:
          GEMFURY_PUSH_TOKEN: ${{ secrets.GEMFURY_PUSH_TOKEN }}
        run: |
          for filename in dist/*.deb; do
            curl -F package=@"$filename" https://${GEMFURY_PUSH_TOKEN}:@push.fury.io/ether/
          done
      # Only publish on non-special tags (e.g. non-beta)
      - name: Publish .rpm to Gemfury
        if: ${{ steps.vars.outputs.tag_special == '' }}
        env:
          GEMFURY_PUSH_TOKEN: ${{ secrets.GEMFURY_PUSH_TOKEN }}
        run: |
          for filename in dist/*.rpm; do
            curl -F package=@"$filename" https://${GEMFURY_PUSH_TOKEN}:@push.fury.io/ether/
          done
